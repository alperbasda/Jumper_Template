//---------------------------------------------------------------------------------------
//      This code was generated by a Jumper template tool. 
//---------------------------------------------------------------------------------------
using CqrsTemplatePack.Application.Features.Auth.Commands.Login;
using CqrsTemplatePack.Application.Features.Auth.HttpClients;
using CqrsTemplatePack.Application.Features.Auth.Rules;
using MediatR;


namespace CqrsTemplatePack.Application.Features.Auth.Handlers.Login;

public class LoginCommandHandler : IRequestHandler<LoginCommand, LoginResponse>
{
    IIdentityServerClientService _identityServerClientService;
    AuthBusinessRules _authBusinessRules;

    public LoginCommandHandler(IIdentityServerClientService identityServerClientService, AuthBusinessRules authBusinessRules)
    {
        _identityServerClientService = identityServerClientService;
        _authBusinessRules = authBusinessRules;
    }

    public async Task<LoginResponse> Handle(LoginCommand request, CancellationToken cancellationToken)
    {
        var res = await _identityServerClientService.CreateToken(request);
        _authBusinessRules.ThrowExceptionIfLoginFailed(res);

        return res.Data;
    }
}
